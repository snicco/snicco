<?xml version="1.0"?>
<psalm xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" errorLevel="1" resolveFromConfigFile="true" xmlns="https://getpsalm.org/schema/config" xsi:schemaLocation="https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd" phpVersion="7.4" strictBinaryOperands="true" disableSuppressAll="true" ignoreInternalFunctionFalseReturn="false" ignoreInternalFunctionNullReturn="false" findUnusedPsalmSuppress="true" ensureArrayIntOffsetsExist="true" sealAllMethods="true" sealAllProperties="true" autoloader="psalm/bootstrap.php" errorBaseline="psalm/tests-baseline.xml">
    <projectFiles>
        <directory name="src"/>
        <directory name="bin/php"/>
        <ignoreFiles>
            <directory name="vendor"/>
            <directory name="src/Snicco/Component/better-wp-cli/tests/_support"/>

            <!-- Only references global WP constants -->
            <file name="src/Snicco/Component/eloquent/src/WPDatabaseSettingsAPI.php"/>
            <!-- These two files are not our code. @see https://github.com/php-cache/integration-tests/issues/117 -->
            <file name="src/Snicco/Component/better-wp-cache/tests/wordpress/WPObjectCachePsr6IntegrationTest.php"/>
            <file name="src/Snicco/Component/better-wp-cache/tests/wordpress/WPObjectCachePsr16IntegrationTest.php"/>
            <file name="src/Snicco/Component/better-wp-cache/tests/wordpress/TaggingIntegrationTest.php"/>
            <!-- This file is part of symfony/console -->
            <file name="src/Snicco/Component/better-wp-cli/src/Style/Terminal.php"/>
        </ignoreFiles>
    </projectFiles>
    <issueHandlers>
        <RedundantConditionGivenDocblockType errorLevel="suppress"/>
        <RedundantPropertyInitializationCheck errorLevel="suppress"/>

        <MoreSpecificReturnType>
            <errorLevel type="suppress">
                <!-- This is a final class and @return static makes no sense. https://github.com/vimeo/psalm/issues/5802 -->
                <file name="src/Snicco/Component/http-routing/src/Http/Psr7/Request.php"/>
                <file name="src/Snicco/Component/http-routing/src/Routing/RoutingConfigurator/Configurator.php"/>
                <file name="src/Snicco/Component/better-wp-cache/src/WPCacheItem.php"/>
            </errorLevel>
        </MoreSpecificReturnType>
        <LessSpecificReturnStatement>
            <errorLevel type="suppress">
                <!-- This is a final class and @return static makes no sense. https://github.com/vimeo/psalm/issues/5802 -->
                <file name="src/Snicco/Component/http-routing/src/Http/Psr7/Request.php"/>
                <file name="src/Snicco/Component/http-routing/src/Routing/RoutingConfigurator/Configurator.php"/>
                <file name="src/Snicco/Component/better-wp-cache/src/WPCacheItem.php"/>
            </errorLevel>
        </LessSpecificReturnStatement>

        <MixedAssignment>
            <errorLevel type="suppress">
                <!-- Deals with mixed arguments by design -->
                <file name="src/Snicco/Component/str-arr/tests/ArrTest.php"/>
            </errorLevel>
        </MixedAssignment>

        <UndefinedMagicMethod>
            <errorLevel type="suppress">
                <!-- This issue occurs in CI if we don't build codeception modules before running psalm -->
                <file name="src/Snicco/Component/better-wp-cli/tests/wordpress/WPCLICest.php"/>
            </errorLevel>
        </UndefinedMagicMethod>
    </issueHandlers>
    <globals>
        <var name="GLOBALS" type="array{phpmailer: \PHPMailer\PHPMailer\PHPMailer, wpdb: \wpdb}"/>
    </globals>
    <plugins>
        <plugin filename="psalm/Plugins/TestCaseClasses.php"/>
    </plugins>
</psalm>
