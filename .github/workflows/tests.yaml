name: 'Tests'

on:
  push:
    branches: master
  pull_request:
  workflow_dispatch:

jobs:

  diff:
    runs-on: ubuntu-20.04
    outputs:
      php: ${{ steps.diff.outputs.php }}
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: 'Generate diff'
        # https://github.com/dorny/paths-filter/tree/v2.10.2
        uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721
        id: diff
        with:
          filters: |
            php:
              - 'src/**/*.php'
              - 'tests/**/*.php'
              - 'phpunit.xml.dist'
              - 'codeception/*dist.yml'                

  unit_tests:
    name: 'Unit tests'
    needs: diff
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: [ 7.4, 8.0, 8.1 ]
        dependencies: [ lowest, highest ]

    steps:
      - name: 'Should run?'
        id: should_run
        outputs:
          true: ${{ needs.changes.outputs.php == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

      - name: 'Checkout code'
        if: steps.should_run.outputs.true
        uses: actions/checkout@v2

      - name: 'Setup PHP [${{ matrix.php }}]'
        if: steps.should_run.outputs.true
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          ini-values: error_reporting=E_ALL

      - name: 'Install composer dependencies'
        if: steps.should_run.outputs.true
        uses: ramsey/composer-install@v1
        with:
          dependency-versions: ${{ matrix.dependencies }}

      - name: 'Run phpunit tests'
        if: steps.should_run.outputs.true
        run: composer phpunit:all

  wordpress_tests:
    name: 'WordPress tests'
    needs: diff
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0', '8.1' ]
        wp: [ '5.8', '5.9' ]
        dependencies: [ lowest, highest ]

    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sniccowp_1
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=3s --health-timeout=3s --health-retries=10

      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:

      - name: 'Should run?'
        id: should_run
        outputs:
          true: ${{ needs.changes.outputs.php == 'true' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

      - name: 'Checkout code'
        if: steps.should_run.outputs.true
        uses: actions/checkout@v2

      - name: 'Setup PHP [${{ matrix.php }}]'
        if: steps.should_run.outputs.true
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: wp-cli
          coverage: none
          ini-values: error_reporting=E_ALL

      - name: 'Install composer dependencies'
        if: steps.should_run.outputs.true
        uses: ramsey/composer-install@v1
        with:
          dependency-versions: ${{ matrix.dependencies }}

      # The config values must match the ones in env.testing.dist
      - name: 'Download WordPress [${{ matrix.wp }}]'
        if: steps.should_run.outputs.true
        run: |
          mkdir wordpress && cd wordpress
          wp core download --force --skip-content --version=${{ matrix.wp }}
          wp config create --dbname="sniccowp_1" --dbuser="root" --dbpass="root" --dbhost="127.0.0.1" --dbprefix="wp_"
          wp core install --url="sniccowp.test" --title="SniccoWP" --admin_user="admin" --admin_password="admin" --admin_email="admin@sniccowp.com" --skip-email
          wp core update-db
          wp rewrite structure '/%postname%/'
          wp plugin install redis-cache
          wp plugin activate redis-cache
          wp redis enable
        working-directory: /tmp

      - name: 'Run codeception tests'
        if: steps.should_run.outputs.true
        run: composer codeception:all