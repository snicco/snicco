name: 'Code coverage'

on:
  pull_request:
  workflow_dispatch:

# These jobs must always run, otherwise the status check "project" will always be stuck waiting for a response
# from codecov.io
jobs:

  phpunit_coverage:

    name: 'PHPUnit coverage'
    runs-on: ubuntu-20.04

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: xdebug3
          ini-values: error_reporting=E_ALL

      - name: Install composer dependencies
        uses: ramsey/composer-install@v1

      - name: 'Collect phpunit coverage'
        run: |
          composer phpunit:all -- --coverage-clover coverage-phpunit.xml

      - name: 'Archive code coverage artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: coverage-phpunit.xml
          path: coverage-phpunit.xml

      - name: 'Upload coverage to codecov.io'
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV_TOKEN }} -f coverage-phpunit.xml -Z


  codeception_coverage:
    name: 'Codeception coverage'
    runs-on: ubuntu-20.04

    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sniccowp_1
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=3s --health-timeout=3s --health-retries=10

      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: wp-cli
          coverage: xdebug3
          ini-values: error_reporting=E_ALL

      - name: 'Install composer dependencies'
        uses: "ramsey/composer-install@v1"

      # The config values here must match the ones in env.testing.dist
      - name: Download WordPress [${{ matrix.wp }}]
        run: |
          mkdir wordpress && cd wordpress
          wp core download --force --skip-content --version=5.9
          wp config create --dbname="sniccowp_1" --dbuser="root" --dbpass="root" --dbhost="127.0.0.1" --dbprefix="wp_"
          wp core install --url="sniccowp.test" --title="SniccoWP" --admin_user="admin" --admin_password="admin" --admin_email="admin@sniccowp.com" --skip-email
          wp core update-db
          wp rewrite structure '/%postname%/'
          wp plugin install redis-cache
          wp plugin activate redis-cache
          wp redis enable
        working-directory: /tmp

      - name: 'Collect codeception coverage'
        run: |
          composer codeception:all -- --coverage-xml codeception-coverage.xml

      - name: 'Archive code coverage results'
        uses: actions/upload-artifact@v2
        with:
          name: codeception-coverage.xml
          path: _output/codeception-coverage.xml

      - name: 'Upload coverage to codecov.io'
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV_TOKEN }} -f codeception-coverage.xml -Z
